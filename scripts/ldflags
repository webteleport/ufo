#!/usr/bin/env bash

commit(){
  # git rev-parse --short HEAD
  git rev-parse HEAD
}

branch(){
  git symbolic-ref -q --short HEAD
}

state(){
  [[ -n $(git status --porcelain) ]] && echo dirty || echo clean
}

summary(){
  git describe --tags --dirty --always
}

# date in rfc3339 format
# https://unix.stackexchange.com/questions/120484/what-is-a-standard-command-for-printing-a-date-in-rfc-3339-format
# equivalent go code:
# https://github.com/ahmetb/govvv/blob/master/values.go#L62
builddate(){
  date -u +"%Y-%m-%dT%H:%M:%SZ"
}

version(){
# basedir=$(dirname $(realpath $0))
# cd $basedir/../..
# git describe --abbrev=0 --tags
  cat VERSION
}

major(){
  version | sed s,^v,,g | cut -d . -f 1
}

minor(){
  version | cut -d . -f 2
}

ldflags(){
  ldflags="${GO_LDFLAGS}
"
  ldflags+="-X 'github.com/btwiuse/version.MajorString=$(major)'
"
  ldflags+="-X 'github.com/btwiuse/version.MinorString=$(minor)'
"
  ldflags+="-X 'github.com/btwiuse/version.GitCommitString=$(commit)'
"
  ldflags+="-X 'github.com/btwiuse/version.GitTreeStateString=$(state)'
"
  ldflags+="-X 'github.com/btwiuse/version.GitVersionString=$(version)'
"
  ldflags+="-X 'github.com/btwiuse/version.BuildDateString=$(builddate)'
"
  echo -n "$ldflags"
}

ldflags
